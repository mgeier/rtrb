name: Run tests, check code
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_LOG: info
jobs:
  tests:
    strategy:
      matrix:
        include:
        - os: macos-latest
        - os: windows-latest
          toolchain-suffix: -gnu
        - os: windows-latest
          toolchain-suffix: -msvc
        - os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone Git repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable${{ matrix.toolchain-suffix }}
          override: true
      - name: Run tests (all features)
        run: |
          cargo test --workspace --all-features
      - name: Run tests (no features)
        run: |
          cargo test --workspace --no-default-features
      - name: Test benchmarks
        run: |
          cargo test --benches

  msrv:
    strategy:
      matrix:
        rust-version: [1.36.0]
    runs-on: ubuntu-latest
    steps:
      - name: Clone Git repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Rust version ${{ matrix.rust-version }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-version }}
          override: true
      - name: Check whether it compiles
        run: |
          cargo check --all-features

  check-code:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Git repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - name: rustfmt
        run: |
          cargo fmt --all -- --check
      - name: clippy
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
      - name: docs
        run: |
          cargo doc --verbose --workspace --all-features
      - name: packaging
        run: |
          cargo package --verbose

  no_std:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Git repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install cargo-nono
        run: |
          cargo install cargo-nono
      - name: Check no_std compatibility
        run: |
          cargo nono check
